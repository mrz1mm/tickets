-- ##################################################################
-- #  MIGRATION 2: SCHEMA DEL SISTEMA DI TICKETING
-- ##################################################################

-- ### 8. ENUMs per Ticket ###
CREATE TYPE ticket_status AS ENUM (
    'APERTO', 'IN_LAVORAZIONE', 'IN_ATTESA_UTENTE', 'BLOCCATO',
    'RISOLTO', 'CHIUSO_RISOLTO', 'CHIUSO_IRRISOLTO', 'CHIUSO_RIGETTATO'
);

CREATE TYPE ticket_priority AS ENUM (
    'BASSA', 'MEDIA', 'ALTA', 'URGENTE'
);

CREATE TYPE history_event_type AS ENUM (
    'TICKET_CREATION', 'COMMENT', 'STATUS_CHANGE',
    'ASSIGNMENT', 'PRIORITY_CHANGE', 'ATTACHMENT_ADDED', 'PROPERTY_CHANGE'
);


-- ### 9. TABELLA DEPARTMENTS ###
CREATE TABLE departments (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    company_id BIGINT NOT NULL,
    name VARCHAR(100) NOT NULL UNIQUE,
    description VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL,

    CONSTRAINT uq_department_name_company_id UNIQUE (name, company_id),
    CONSTRAINT fk_departments_to_company FOREIGN KEY(company_id) REFERENCES companies(id) ON DELETE CASCADE
);


-- ### 10. TABELLA TICKETS ###
CREATE TABLE tickets (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    company_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    requester_id BIGINT NOT NULL,
    assignee_id BIGINT,
    department_id BIGINT NOT NULL,
    status ticket_status NOT NULL DEFAULT 'APERTO',
    priority ticket_priority NOT NULL DEFAULT 'BASSA',
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL,

    CONSTRAINT fk_tickets_requester FOREIGN KEY(requester_id) REFERENCES user_profiles(id) ON DELETE RESTRICT,
    CONSTRAINT fk_tickets_assignee FOREIGN KEY(assignee_id) REFERENCES user_profiles(id) ON DELETE SET NULL,
    CONSTRAINT fk_tickets_department FOREIGN KEY(department_id) REFERENCES departments(id) ON DELETE RESTRICT,
    CONSTRAINT fk_tickets_to_company FOREIGN KEY(company_id) REFERENCES companies(id) ON DELETE CASCADE
);
CREATE INDEX idx_tickets_requester_id ON tickets(requester_id);
CREATE INDEX idx_tickets_assignee_id ON tickets(assignee_id);
CREATE INDEX idx_tickets_department_id ON tickets(department_id);
CREATE INDEX idx_tickets_status ON tickets(status);


-- ### 11. TICKET_HISTORY (Cronologia) ###
CREATE TABLE ticket_history (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    ticket_id BIGINT NOT NULL,
    user_id BIGINT, -- Pu√≤ essere NULL per eventi di sistema
    event_type history_event_type NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL,

    CONSTRAINT fk_history_ticket FOREIGN KEY(ticket_id) REFERENCES tickets(id) ON DELETE CASCADE,
    CONSTRAINT fk_history_user FOREIGN KEY(user_id) REFERENCES user_profiles(id) ON DELETE SET NULL
);
CREATE INDEX idx_ticket_history_ticket_id ON ticket_history(ticket_id);


-- ### 12. TICKET_ATTACHMENTS (Allegati) ###
CREATE TABLE ticket_attachments (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    ticket_id BIGINT NOT NULL,
    uploader_id BIGINT NOT NULL,
    file_name VARCHAR(255) NOT NULL,
    file_path VARCHAR(512) NOT NULL UNIQUE,
    mime_type VARCHAR(100) NOT NULL,
    file_size_bytes BIGINT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL,

    CONSTRAINT fk_attachment_ticket FOREIGN KEY(ticket_id) REFERENCES tickets(id) ON DELETE CASCADE,
    CONSTRAINT fk_attachment_uploader FOREIGN KEY(uploader_id) REFERENCES user_profiles(id) ON DELETE RESTRICT
);
CREATE INDEX idx_ticket_attachments_ticket_id ON ticket_attachments(ticket_id);