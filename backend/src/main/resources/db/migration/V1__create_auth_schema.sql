-- ##################################################################
-- #  MIGRATION 1: SCHEMA DI AUTENTICAZIONE E AUTORIZZAZIONE (AUTH)
-- ##################################################################

-- ### 1. TABELLA USER_PROFILES (Anagrafica) ###
CREATE TABLE user_profiles (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(100) NOT NULL UNIQUE,
    display_name VARCHAR(255),
    enabled BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL
);

CREATE INDEX idx_user_profiles_email ON user_profiles(email);


-- ### 2. TABELLA USER_CREDENTIALS (Credenziali di accesso) ###
CREATE TABLE user_credentials (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_profile_id BIGINT NOT NULL,
    password VARCHAR(255),
    provider VARCHAR(50) NOT NULL,
    provider_id VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL,

    CONSTRAINT fk_credentials_to_profile FOREIGN KEY(user_profile_id) REFERENCES user_profiles(id) ON DELETE CASCADE,
    CONSTRAINT uq_provider_provider_id UNIQUE (provider, provider_id)
);

CREATE INDEX idx_user_credentials_provider_provider_id ON user_credentials(provider, provider_id);


-- ### 3. TABELLA ROLES (CON NOME E DESCRIZIONE) ###
CREATE TABLE roles (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL
);


-- ### 4. TABELLA PERMISSIONS (CON NOME E DESCRIZIONE) ###
CREATE TABLE permissions (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE NULL
);


-- ### 5. TABELLA DI JOIN PROFILI-RUOLI (Many-To-Many) ###
CREATE TABLE user_profile_roles (
    user_profile_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    PRIMARY KEY (user_profile_id, role_id),

    CONSTRAINT fk_profile_roles_to_profile FOREIGN KEY(user_profile_id) REFERENCES user_profiles(id) ON DELETE CASCADE,
    CONSTRAINT fk_profile_roles_to_role FOREIGN KEY(role_id) REFERENCES roles(id) ON DELETE CASCADE
);


-- ### 6. TABELLA DI JOIN RUOLI-PERMESSI (Many-To-Many) ###
CREATE TABLE role_permissions (
    role_id BIGINT NOT NULL,
    permission_id BIGINT NOT NULL,
    PRIMARY KEY (role_id, permission_id),

    CONSTRAINT fk_role_permissions_to_role FOREIGN KEY(role_id) REFERENCES roles(id) ON DELETE CASCADE,
    CONSTRAINT fk_role_permissions_to_permission FOREIGN KEY(permission_id) REFERENCES permissions(id) ON DELETE CASCADE
);